{"version":3,"sources":["util/api.ts","util/getPoster.ts","util/useModal.ts","UI/DetailViewModal.tsx","UI/Grid.tsx","UI/Logo.tsx","UI/Search.tsx","UI/Navbar.tsx","UI/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axiosInstance","axios","create","baseURL","params","api_key","process","discover","a","get","getPoster","path","config","size","useModal","React","useState","isVisible","setIsVisible","toggle","Backdrop","styled","div","ModalContainer","InnerBackdrop","props","background","InfoBar","ReleaseDate","h4","Overview","p","CloseButtonWrapper","Caption","span","DetailViewModal","close","data","ReactDOM","createPortal","onClick","color","fontSize","backdrop_path","format","Date","release_date","rating","Number","vote_average","starRatedColor","starDimension","starSpacing","style","margin","overview","document","body","AbsoluteLabel","h1","GridContainer","GridElement","poster","InnerGridElement","MovieTitle","Indicator","Grid","movies","hoverOver","currentMovie","setCurrentMovie","timeout","undefined","map","el","idx","onMouseEnter","clearTimeout","setTimeout","handleHoverOver","handleClick","className","title","Logo","Container","isSearching","Input","input","Search","setIsSearching","cursor","placeholder","Inner","Navbar","Main","Content","Layout","children","App","setMovies","setBackground","useEffect","fetchMovies","sort_by","page","language","request","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a13ed84.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_MOVIEDB_API_KEY,\n  },\n});\n\nexport const discover = async (params: any = {}) =>\n  axiosInstance.get('/discover/movie', { params });\n\nexport const search = async (params: any = {}) =>\n  axiosInstance.get('search/search-movies', { params });\n","export const getPoster = (\n  path: string,\n  config: '200' | '500' | 'original' = 'original'\n) => {\n  const size = config === 'original' ? 'original' : `w${config}`;\n  return `https://image.tmdb.org/t/p/${size}/${path}`;\n};\n","import React from 'react';\n\nfunction useModal() {\n  const [isVisible, setIsVisible] = React.useState<boolean>(false);\n\n  const toggle = () => {\n    setIsVisible(!isVisible);\n  };\n\n  return {\n    isVisible,\n    toggle,\n  };\n}\n\nexport default useModal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport Close from 'react-ionicons/lib/IosClose';\nimport { format } from 'date-fns';\nimport Ratings from 'react-star-ratings';\nimport { getPoster } from '../util';\n\nconst Backdrop = styled.div`\n  top: 0;\n  left: 0;\n  width: 100vw;\n  z-index: 999;\n  height: 100vh;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  box-sizing: border-box;\n  flex-direction: column;\n  justify-content: center;\n  background: rgba(0, 0, 0, 0.7);\n\n  animation: fadeIn 220ms ease-in-out;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nconst ModalContainer = styled.div`\n  width: 800px;\n  display: flex;\n  color: white;\n  max-width: 600px;\n  position: relative;\n  padding-bottom: 2rem;\n  background: #2d2d2d;\n  flex-direction: column;\n`;\n\nconst InnerBackdrop = styled.div<{ background: string }>`\n  width: 100%;\n  height: 260px;\n  background: url(${(props) => props.background});\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nconst InfoBar = styled.div`\n  display: flex;\n  margin: 1rem;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ReleaseDate = styled.h4`\n  margin: 0;\n`;\n\nconst Overview = styled.p`\n  margin: 0rem;\n  margin-top: 0.4rem;\n`;\n\nconst CloseButtonWrapper = styled.div`\n  top: 1rem;\n  right: 1rem;\n  width: 2.3rem;\n  height: 2.3rem;\n  display: flex;\n  cursor: pointer;\n  background: black;\n  position: absolute;\n  border-radius: 100%;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Caption = styled.span`\n  font-weight: 300;\n  font-size: 0.6rem;\n  color: darkgray;\n  margin-right: 0.2rem;\n  text-transform: uppercase;\n`;\n\ninterface Props {\n  isVisible: boolean;\n  close: () => void;\n  data: {\n    backdrop_path: string;\n    overview: string;\n    release_date: string;\n    vote_average: string;\n  };\n}\n\nconst DetailViewModal = ({ isVisible, close, data }: Props) =>\n  isVisible\n    ? ReactDOM.createPortal(\n        <>\n          <Backdrop>\n            <ModalContainer>\n              <CloseButtonWrapper onClick={close}>\n                <Close color=\"#fff\" fontSize=\"2rem\" />\n              </CloseButtonWrapper>\n              <InnerBackdrop\n                background={getPoster(data.backdrop_path, '500')}\n              />\n\n              <InfoBar>\n                <ReleaseDate>\n                  <Caption>Release Date:</Caption>{' '}\n                  {format(new Date(data.release_date), 'PP')}\n                </ReleaseDate>\n                <div>\n                  <Caption>Rating:</Caption>\n                  <Ratings\n                    rating={Number(data.vote_average) / 2}\n                    starRatedColor=\"#e6411a\"\n                    starDimension=\"1.5rem\"\n                    starSpacing=\"0\"\n                  />\n                </div>\n              </InfoBar>\n\n              <div style={{ margin: '1rem' }}>\n                <Caption>Overview</Caption>\n                <Overview>{data.overview}</Overview>\n              </div>\n            </ModalContainer>\n          </Backdrop>\n        </>,\n        document.body\n      )\n    : null;\n\nexport default DetailViewModal;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getPoster, useModal } from '../util';\nimport Modal from './DetailViewModal';\n\nconst AbsoluteLabel = styled.h1`\n  top: -5%;\n  left: 10%;\n  z-index: 0;\n  font-size: 8rem;\n  font-weight: 800;\n  color: #272727;\n  position: absolute;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n`;\n\nconst GridContainer = styled.div`\n  z-index: 10;\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 60%;\n  position: relative;\n  align-items: center;\n  padding-bottom: 2rem;\n`;\n\nconst GridElement = styled.div<{ poster: string }>`\n  height: 140px;\n  flex: 1 0 24%;\n  cursor: pointer;\n  background: gray;\n  background-size: cover;\n  background-repeat: no-repeat;\n  transition: all 120ms ease-in-out;\n  background-blend-mode: multiply;\n  background-color: rgba(0, 0, 0, 0.65);\n  background-image: url(${(props) => props.poster});\n\n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(0, 0, 0, 0);\n  }\n`;\n\nconst InnerGridElement = styled.div`\n  box-sizing: border-box;\n  padding: 1rem;\n  display: flex;\n  height: inherit;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nconst MovieTitle = styled.p`\n  margin: 0;\n  color: white;\n  font-weight: 300;\n  margin-bottom: 0.6rem;\n`;\n\nconst Indicator = styled.div`\n  width: 20px;\n  height: 2px;\n  background-color: #e6411a;\n`;\n\ninterface Props {\n  movies: any[];\n  hoverOver?: (el: any) => void;\n}\n\nfunction Grid({ movies, hoverOver }: Props) {\n  const [currentMovie, setCurrentMovie] = React.useState<any>({});\n  const { isVisible, toggle } = useModal();\n  let timeout: any = undefined;\n\n  const handleHoverOver = (el: any) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      hoverOver!(el);\n    }, 1000);\n  };\n\n  const handleClick = (el: any) => {\n    setCurrentMovie(el);\n    toggle();\n  };\n\n  return (\n    <>\n      <AbsoluteLabel>Popular</AbsoluteLabel>\n      <GridContainer>\n        {movies.map((el, idx) => (\n          <GridElement\n            key={idx}\n            poster={getPoster(el.backdrop_path, '500')}\n            onMouseEnter={() => handleHoverOver(el)}\n            onClick={() => handleClick(el)}\n          >\n            <InnerGridElement className=\"inner-element\">\n              <MovieTitle>{el.title}</MovieTitle>\n              <Indicator />\n            </InnerGridElement>\n          </GridElement>\n        ))}\n      </GridContainer>\n\n      <Modal close={toggle} isVisible={isVisible} data={currentMovie} />\n    </>\n  );\n}\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Logo = styled.h1`\n  margin: 0;\n  padding: 0;\n  color: #e6411a;\n  font-size: 1.6rem;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport SearchIcon from 'react-ionicons/lib/MdSearch';\nimport CancelIcon from 'react-ionicons/lib/MdClose';\n\nconst Container = styled.div<{ isSearching: boolean }>`\n  opacity: ${(props) => (props.isSearching ? 1 : 0.6)};\n  display: flex;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Input = styled.input`\n  color: white;\n  outline: none;\n  border: 1px solid #929292;\n  background: rgba(0, 0, 0, 0.6);\n  animation: expand 220ms ease-in;\n  position: absolute;\n  right: 4rem;\n  padding: 0.3rem;\n  width: 200px;\n\n  @keyframes expand {\n    from {\n      width: 0;\n    }\n\n    to {\n      width: 200px;\n    }\n  }\n`;\n\nfunction Search() {\n  const [isSearching, setIsSearching] = React.useState<boolean>(false);\n\n  const handleSearch = () => {\n    setIsSearching(true);\n  };\n\n  const cancelSearch = () => {\n    setIsSearching(false);\n  };\n\n  return (\n    <>\n      <Container isSearching={isSearching}>\n        {!isSearching && (\n          <SearchIcon\n            color=\"white\"\n            fontSize=\"1.8rem\"\n            style={{ cursor: 'pointer' }}\n            onClick={handleSearch}\n          />\n        )}\n\n        {isSearching && (\n          <>\n            <CancelIcon\n              color=\"white\"\n              fontSize=\"1.8rem\"\n              style={{ cursor: 'pointer' }}\n              onClick={cancelSearch}\n            />\n            <Input placeholder=\"Start typing to search...\" />\n          </>\n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default Search;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Logo } from './Logo';\nimport Search from './Search';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 60px;\n  display: flex;\n  position: fixed;\n  align-items: center;\n  justify-content: space-between;\n  z-index: 9999;\n`;\n\nconst Inner = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 0.6rem 2rem;\n  justify-content: space-between;\n`;\n\nfunction Navbar() {\n  return (\n    <Container>\n      <Inner>\n        <Logo>MOVIEFLIX</Logo>\n\n        <Search />\n      </Inner>\n    </Container>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getPoster } from '../util';\nimport Navbar from './Navbar';\n\nconst Main = styled.div<{ background?: string }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n\n  background: url(${(props) => props.background});\n  background-color: ${(props) =>\n    props.background ? 'rgba(0,0,0,0.8)' : '#2d2d2d'};\n  background-repeat: no-repeat;\n  background-blend-mode: multiply;\n  transition: all 1s ease-in-out;\n  background-size: cover;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  margin-top: 8rem;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface Props {\n  children: React.ReactChild | React.ReactChild[];\n  background?: string;\n}\n\nfunction Layout({ children, background }: Props) {\n  return (\n    <Main background={background}>\n      <Navbar />\n      <Content>{children}</Content>\n    </Main>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Layout, Grid } from './UI';\nimport { discover, getPoster } from './util';\n\nfunction App() {\n  const [movies, setMovies] = React.useState<any[]>([]);\n  const [background, setBackground] = React.useState<string>('');\n\n  React.useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    const params = {\n      sort_by: 'popularity.desc',\n      page: 1,\n      language: 'en-US',\n    };\n\n    const request = await discover(params);\n    setMovies(request.data.results);\n  };\n\n  const handleSetBackground = (el: any) => {\n    setBackground(getPoster(el.backdrop_path, 'original'));\n  };\n\n  return (\n    <Layout background={background}>\n      <Grid movies={movies} hoverOver={handleSetBackground} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}