{"version":3,"sources":["util/api.ts","util/getPoster.ts","UI/Grid.tsx","UI/Logo.tsx","UI/Navbar.tsx","UI/Layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axiosInstance","axios","create","baseURL","params","api_key","process","discover","a","get","getPoster","path","config","size","AbsoluteLabel","styled","h1","GridContainer","div","GridElement","props","poster","InnerGridElement","MovieTitle","p","Indicator","Grid","movies","hoverOver","timeout","undefined","map","el","idx","backdrop_path","onMouseEnter","clearTimeout","setTimeout","handleHoverOver","className","title","Logo","Container","Inner","Navbar","Main","background","Content","Layout","children","App","React","useState","setMovies","setBackground","useEffect","fetchMovies","sort_by","page","language","request","data","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEMA,E,OAAgBC,EAAMC,OAAO,CACjCC,QAAS,+BACTC,OAAQ,CACNC,QAASC,sCAIAC,EAAQ,uCAAG,wCAAAC,EAAA,6DAAOJ,EAAP,+BAAqB,GAArB,kBACtBJ,EAAcS,IAAI,kBAAmB,CAAEL,YADjB,2CAAH,qDCTRM,EAAY,SACvBC,GAEI,IADJC,EACG,uDADkC,WAE/BC,EAAkB,aAAXD,EAAwB,WAAxB,WAAyCA,GACtD,MAAM,8BAAN,OAAqCC,EAArC,YAA6CF,I,44CCD/C,IAAMG,EAAgBC,IAAOC,GAAV,KAYbC,EAAgBF,IAAOG,IAAV,KAYbC,EAAcJ,IAAOG,IAAV,KASS,SAACE,GAAD,OAAWA,EAAMC,UAQrCC,EAAmBP,IAAOG,IAAV,KAShBK,EAAaR,IAAOS,EAAV,KAOVC,EAAYV,IAAOG,IAAV,KA6CAQ,MAlCf,YAA6C,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,UAClBC,OAAeC,EAYnB,OACE,qCACE,cAAChB,EAAD,sBACA,cAACG,EAAD,UACGU,EAAOI,KAAI,SAACC,EAAIC,GAAL,OACV,cAACd,EAAD,CAEEE,OAAQX,EAAUsB,EAAGE,cAAe,OACpCC,aAAc,kBAlBA,SAACH,GACnBH,GACFO,aAAaP,GAGfA,EAAUQ,YAAW,WACnBT,EAAWI,KACV,KAWyBM,CAAgBN,IAHtC,SAKE,eAACV,EAAD,CAAkBiB,UAAU,gBAA5B,UACE,cAAChB,EAAD,UAAaS,EAAGQ,QAChB,cAACf,EAAD,QANGQ,Y,2KCzFV,IAAMQ,EAAO1B,IAAOC,GAAV,K,6SCEjB,IAAM0B,EAAY3B,IAAOG,IAAV,KASTyB,EAAQ5B,IAAOG,IAAV,KAcI0B,MAVf,WACE,OACE,cAACF,EAAD,UACE,cAACC,EAAD,UACE,cAACF,EAAD,6B,ggBChBR,IAAMI,EAAO9B,IAAOG,IAAV,KAOU,SAACE,GAAD,OAAWA,EAAM0B,cACf,SAAC1B,GAAD,OAClBA,EAAM0B,WAAa,kBAAoB,aAOrCC,EAAUhC,IAAOG,IAAV,KAqBE8B,MATf,YAAkD,IAAhCC,EAA+B,EAA/BA,SAAUH,EAAqB,EAArBA,WAC1B,OACE,eAACD,EAAD,CAAMC,WAAYA,EAAlB,UACE,cAAC,EAAD,IACA,cAACC,EAAD,UAAUE,QCHDC,MA9Bf,WAAgB,IAAD,EACeC,IAAMC,SAAgB,IADrC,mBACNzB,EADM,KACE0B,EADF,OAEuBF,IAAMC,SAAiB,IAF9C,mBAENN,EAFM,KAEMQ,EAFN,KAIbH,IAAMI,WAAU,WACdC,MACC,IAEH,IAAMA,EAAW,uCAAG,8BAAAhD,EAAA,6DACZJ,EAAS,CACbqD,QAAS,kBACTC,KAAM,EACNC,SAAU,SAJM,SAOIpD,EAASH,GAPb,OAOZwD,EAPY,OAQlBP,EAAUO,EAAQC,KAAKC,SARL,2CAAH,qDAejB,OACE,cAAC,EAAD,CAAQhB,WAAYA,EAApB,SACE,cAAC,EAAD,CAAMnB,OAAQA,EAAQC,UANE,SAACI,GAC3BsB,EAAc5C,EAAUsB,EAAGE,cAAe,mBCV/B6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.839abb91.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: process.env.REACT_APP_MOVIEDB_API_KEY,\n  },\n});\n\nexport const discover = async (params: any = {}) =>\n  axiosInstance.get('/discover/movie', { params });\n","export const getPoster = (\n  path: string,\n  config: '200' | '500' | 'original' = 'original'\n) => {\n  const size = config === 'original' ? 'original' : `w${config}`;\n  return `https://image.tmdb.org/t/p/${size}/${path}`;\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getPoster } from '../util';\n\nconst AbsoluteLabel = styled.h1`\n  top: -5%;\n  left: 10%;\n  z-index: 0;\n  font-size: 8rem;\n  font-weight: 800;\n  color: #272727;\n  position: absolute;\n  text-transform: uppercase;\n  letter-spacing: 0.4rem;\n`;\n\nconst GridContainer = styled.div`\n  z-index: 10;\n  width: 100vw;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 60%;\n  position: relative;\n  align-items: center;\n  padding-bottom: 2rem;\n`;\n\nconst GridElement = styled.div<{ poster: string }>`\n  height: 140px;\n  flex: 1 0 24%;\n  background: gray;\n  background-size: cover;\n  background-repeat: no-repeat;\n  transition: all 120ms ease-in-out;\n  background-blend-mode: multiply;\n  background-color: rgba(0, 0, 0, 0.65);\n  background-image: url(${(props) => props.poster});\n\n  &:hover {\n    transform: scale(1.1);\n    background-color: rgba(0, 0, 0, 0);\n  }\n`;\n\nconst InnerGridElement = styled.div`\n  box-sizing: border-box;\n  padding: 1rem;\n  display: flex;\n  height: inherit;\n  flex-direction: column;\n  justify-content: flex-end;\n`;\n\nconst MovieTitle = styled.p`\n  margin: 0;\n  color: white;\n  font-weight: 300;\n  margin-bottom: 0.6rem;\n`;\n\nconst Indicator = styled.div`\n  width: 20px;\n  height: 2px;\n  background-color: #e6411a;\n`;\n\ninterface Props {\n  movies: any[];\n  hoverOver?: (el: any) => void;\n}\n\nfunction Grid({ movies, hoverOver }: Props) {\n  let timeout: any = undefined;\n\n  const handleHoverOver = (el: any) => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(() => {\n      hoverOver!(el);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <AbsoluteLabel>Popular</AbsoluteLabel>\n      <GridContainer>\n        {movies.map((el, idx) => (\n          <GridElement\n            key={idx}\n            poster={getPoster(el.backdrop_path, '500')}\n            onMouseEnter={() => handleHoverOver(el)}\n          >\n            <InnerGridElement className=\"inner-element\">\n              <MovieTitle>{el.title}</MovieTitle>\n              <Indicator />\n            </InnerGridElement>\n          </GridElement>\n        ))}\n      </GridContainer>\n    </>\n  );\n}\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Logo = styled.h1`\n  margin: 0;\n  padding: 0;\n  color: #e6411a;\n  font-size: 1.6rem;\n  text-transform: uppercase;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Logo } from './Logo';\n\nconst Container = styled.div`\n  width: 100%;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 6rem;\n  justify-content: space-between;\n`;\n\nconst Inner = styled.div`\n  padding: 0.6rem 2rem;\n`;\n\nfunction Navbar() {\n  return (\n    <Container>\n      <Inner>\n        <Logo>MOVIEFLIX</Logo>\n      </Inner>\n    </Container>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getPoster } from '../util';\nimport Navbar from './Navbar';\n\nconst Main = styled.div<{ background?: string }>`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  min-height: 100vh;\n  flex-direction: column;\n\n  background: url(${(props) => props.background});\n  background-color: ${(props) =>\n    props.background ? 'rgba(0,0,0,0.8)' : '#2d2d2d'};\n  background-repeat: no-repeat;\n  background-blend-mode: multiply;\n  transition: all 1s ease-in-out;\n  background-size: cover;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface Props {\n  children: React.ReactChild | React.ReactChild[];\n  background?: string;\n}\n\nfunction Layout({ children, background }: Props) {\n  return (\n    <Main background={background}>\n      <Navbar />\n      <Content>{children}</Content>\n    </Main>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { Layout, Grid } from './UI';\nimport { discover, getPoster } from './util';\n\nfunction App() {\n  const [movies, setMovies] = React.useState<any[]>([]);\n  const [background, setBackground] = React.useState<string>('');\n\n  React.useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  const fetchMovies = async () => {\n    const params = {\n      sort_by: 'popularity.desc',\n      page: 1,\n      language: 'en-US',\n    };\n\n    const request = await discover(params);\n    setMovies(request.data.results);\n  };\n\n  const handleSetBackground = (el: any) => {\n    setBackground(getPoster(el.backdrop_path, 'original'));\n  };\n\n  return (\n    <Layout background={background}>\n      <Grid movies={movies} hoverOver={handleSetBackground} />\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}